<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Feed RSS do(a) Rafael Brito Gomes</title><link>http://softwarelivre.org/gomex</link><description>Conteúdo do(a) Rafael Brito Gomes publicado no Software Livre Brasil</description><item><title>Gmain_timeout_dispatch – Erro em meu servidor de monitoramento com heartbeat</title><description>&lt;p&gt;Problema de hoje;  Dois servidores Zabbix configurados em um ambiente de alta disponibilidade, perdi alguns pings no endereço IP virtual e na minha analise no log do heartbeat achei isso: Aug 11 08:00:15 SERVIDOR heartbeat: [12127]: WARN: Gmain_timeout_dispatch: Dispatch function for send local status took too long to execute: 70 ms (&amp;gt; 50 ms) (GSource: […]&lt;/p&gt;</description><pubDate>Thu, 15 Aug 2013 18:42:34 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/gmain-timeout-dispatch-%E2%80%93-erro-em-meu-servidor-de-monitoramento-com-heartbeat</link><guid>http://softwarelivre.org/gomex/blog/gmain-timeout-dispatch-%E2%80%93-erro-em-meu-servidor-de-monitoramento-com-heartbeat</guid></item><item><title>Organização de scripts e configurações de agentes Zabbix</title><description>&lt;p&gt;Depois de uma conversa na lista de usuários do Zabbix, cheguei a conclusão que era necessário organizar as configurações e scripts que me permitem monitorar além dos itens padrões que acompanha o zabbix-agent. Para tal, dividi em duas pastas: /etc/zabbix/conf.d/  – Essa pasta tem como objetivo reunir todos os arquivos de configuração que tem os […]&lt;/p&gt;</description><pubDate>Mon, 12 Aug 2013 18:19:19 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/organizacao-de-scripts-e-configuracoes-de-agentes-zabbix</link><guid>http://softwarelivre.org/gomex/blog/organizacao-de-scripts-e-configuracoes-de-agentes-zabbix</guid></item><item><title>Monitorando DRBD com Zabbix</title><description>&lt;p&gt;DRBD é um serviço de sincronização de discos entre servidores, via rede. Criando assim um ambiente de alta disponibilidade. Para monitorar o DRBD é muito simples, basta que adicione as duas linhas abaixo no arquivo de configuração do seu agente zabbix, nos servidores que deseja monitorar essa sincronização (Geralmente esse arquivo se encontra é /etc/zabbix/zabbix_agentd.conf) […]&lt;/p&gt;</description><pubDate>Tue, 06 Aug 2013 15:27:31 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/monitorando-drbd-com-zabbix</link><guid>http://softwarelivre.org/gomex/blog/monitorando-drbd-com-zabbix</guid></item><item><title>Monitorando Rsyslog com Zabbix</title><description>&lt;p&gt;Gerenciar o log é uma coisa séria, e pensando nisso, reservei um tempo para pesquisar sobre como poderia monitorar meu rsyslog, que é o software responsável pelo log de todos meus servidores.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2013/05/rsyslog-logo.gif"&gt;&lt;img class="aligncenter size-full wp-image-1162" src="http://techfree.com.br/wordpress/wp-content/uploads/2013/05/rsyslog-logo.gif" height="90" alt="rsyslog-logo" width="200"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Você sabia que o rsyslog, por padrão, tem um limite de escrita de log? Isso mesmo, de acordo com a sua &lt;a href="http://www.rsyslog.com/tag/systemlogratelimitinterval/" title="Rsyslog ratelimit" target="_blank"&gt;documentação&lt;/a&gt; são 200 logs em um intervalo de 5 segundos, sei que parece muito para maioria dos ambientes, mas ninguém quer perder log, né? Seria legal no mínimo saber que isso aconteceu, para que possamos em ultimo caso aumentar um pouquinho esse limite, correto?&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Para monitorar o Rsyslog usaremos um módulo chamado &lt;a href="http://www.rsyslog.com/doc/impstats.html" title="Rsyslog impstats" target="_blank"&gt;impstats&lt;/a&gt;, que ainda está em desenvolvimento, mas tem funcionado pra mim a contento por hora e infelizmente é a única forma que temos até o momento.&lt;/p&gt;
&lt;p&gt;Para configurar esse módulo no seu rsyslog é muito simples, abra o arquivo /etc/rsyslog.conf e adicione &lt;strong&gt;no topo, &lt;/strong&gt;isso mesmo! No topo do arquivo, pois caso contrário não vai funcionar, a seguinte configuração:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;module(load="impstats" interval="600" severity="7")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;# to actually gather the data:&lt;br&gt;
syslog.=debug  /var/log/rsyslog-stats&lt;/p&gt;
&lt;p&gt;Mude os parâmetros a gosto, para quem já conhece o rsyslog, não encontrará dificuldades em fazer isso, caso tenha, por favor, comente nessa postagem, tentarei ajudar. Se mudar o caminho do arquivo, por favor, mude no restante da documentação, caso contrário não irá funcionar.&lt;/p&gt;
&lt;p&gt;Agora vamos para configuração do agente Zabbix.&lt;/p&gt;
&lt;p&gt;Para obtermos a nossa informação, usaremos a configuração de itens de usuário do zabbix, também conhecida como &lt;em&gt;UserParameter.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Acesse seu arquivo de configuração do servidor onde deseja monitorar o rsyslog e adicione a seguinte configuração:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# Monitoramento Rsyslog&lt;br&gt;
UserParameter=rsyslog.enqueued,/usr/bin/tail -n20  /var/log/rsyslog-stats | /bin/grep main | /usr/bin/tail -1 | /bin/cut -d" " -f7 | /bin/cut -d"=" -f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
UserParameter=rsyslog.full,/usr/bin/tail -n20  /var/log/rsyslog-stats | /bin/grep main | /usr/bin/tail -1 | /bin/cut -d" " -f8 | /bin/cut -d"=" -f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
UserParameter=rsyslog.discarded.full,/usr/bin/tail -n20  /var/log/rsyslog-stats | /bin/grep main | /usr/bin/tail -1 | /bin/cut -d" " -f9 | /bin/cut -d"=" -f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
UserParameter=rsyslog.discarded.nf,/usr/bin/tail -n20  /var/log/rsyslog-stats | /bin/grep main | /usr/bin/tail -1 | /bin/cut -d" " -f10 | /bin/cut -d"=" -f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Modifique o dono do arquivo, para que o zabbix possa fazer a consulta:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chown zabbix /var/log/rsyslog-stats&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para evitar que esse arquivo cresça demais, vamos usar o logrotate! Crie o arquivo /etc/logrotate.d/rsyslog com o seguinte conteúdo :&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/var/log/rsyslog-stats {&lt;br&gt;
weekly&lt;br&gt;
rotate 5&lt;br&gt;
compress&lt;br&gt;
notifempty&lt;br&gt;
missingok&lt;br&gt;
create 0600 zabbix zabbix&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reinicie seu serviço do Zabbix e vamos para configuração via interface web do zabbix.&lt;/p&gt;
&lt;p&gt;Importe &lt;a href="https://mega.co.nz/#!V10SEKTB!PGhnYBrFnmiiC9vlC_ciPjs21HVawnsEuEAnjDEjBPU" title="Template Zabbix Rsyslog" target="_blank"&gt;esse template&lt;/a&gt; no seu Zabbix e aplique no host desejado. Pronto! &lt;img class="wp-smiley" src="http://techfree.com.br/wordpress/wp-includes/images/smilies/icon_smile.gif" alt=":)"&gt; &lt;/p&gt;</description><pubDate>Mon, 13 May 2013 16:11:00 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/monitorando-rsyslog-com-zabbix</link><guid>http://softwarelivre.org/gomex/blog/monitorando-rsyslog-com-zabbix</guid></item><item><title>Monitorando se SNMP está funcionando no ativo</title><description>&lt;p&gt;Quem nunca foi pego de surpresa ao verificar que seu ativo, que você configurou para monitorar informações via SNMP, teve suas configurações internas de acesso SNMP modificadas, assim acabou percebendo isso apenas muito tempo depois e por fim perdeu informação nesse intervalo de tempo?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2011/03/index_img_0.jpg"&gt;&lt;img class="aligncenter size-full wp-image-971" title="index_img_0" src="http://techfree.com.br/wordpress/wp-content/uploads/2011/03/index_img_0.jpg" height="62" alt="" width="234"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nativamente, o zabbix não tem monitoria desse tipo de situação, pois se ele não retornar nada em uma consulta SNMP nenhum alerta é possível configurar, não sem a criação de um script, pois quando a consulta SNMP tem retorno de erro o item monitorado é dado como “Não suportado” e então desabilitado automaticamente.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Pensando nisso, criei um script para testar se o acesso SNMP está funcionando perfeitamente e com isso caso não consiga obter informação, ele retornará uma valor que poderemos tratar em uma trigger, no nosso caso 0.&lt;/p&gt;
&lt;p&gt;Vamos a prática, primeiro acesse seu servidor zabbix.&lt;/p&gt;
&lt;p&gt;Na pasta /etc/zabbix/externalscripts crie o arquivo checa_snmp.sh, com o seguite contéudo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br&gt;
#!/bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;RETORNO=`/usr/bin/snmpwalk -r 1 -v $3 -c $2 $1 IF-MIB::ifIndex.1 2&amp;gt; /dev/null`&lt;/p&gt;
&lt;p&gt;if [ $? != 0 ] ; then&lt;br&gt;
echo 0&lt;br&gt;
else&lt;/p&gt;
&lt;p&gt;echo $RETORNO | cut -d’ ‘ -f4&lt;br&gt;
fi&lt;/p&gt;
&lt;p&gt;Agora torne esse arquivo executável:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# chmod +x /etc/zabbix/externalscripts/checa_snmp.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Entre na interface web do servidor Zabbix. No seu template de SNMP ou onde desejar, crie um item novo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template4.png"&gt;&lt;img class="aligncenter size-full wp-image-1151" title="Importa_Template4" src="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template4.png" height="198" alt="" width="595"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coloque o nome do seu item, no meu caso coloquei &lt;strong&gt;“Checa acesso SNMP”&lt;/strong&gt;, mas fique a vontade.&lt;/p&gt;
&lt;p&gt;No campo tipo, selecione a opção &lt;strong&gt;“Monitoramento externo”&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;No campo chave, escreva checa_snmp.sh["&amp;lt;escreva aqui o nome da sua comunidade&amp;gt;","&amp;lt;versão do SNMP&amp;gt;"].&lt;/p&gt;
&lt;p&gt;O retorno “0″ (zero) sempre indica falha, ou seja, basta criar uma trigger para verificar essa condição e pronto! Resolvido seu problema! &lt;img class="wp-smiley" src="http://techfree.com.br/wordpress/wp-includes/images/smilies/icon_biggrin.gif" alt=":D"&gt; &lt;/p&gt;</description><pubDate>Tue, 09 Apr 2013 17:49:04 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/monitorando-se-snmp-esta-funcionando-no-ativo</link><guid>http://softwarelivre.org/gomex/blog/monitorando-se-snmp-esta-funcionando-no-ativo</guid></item><item><title>Monitorando MySQL com Zabbix v2</title><description>&lt;p&gt;Eu fiz um&lt;a href="http://techfree.com.br/wordpress/2011/03/30/monitorando-o-mysql-com-o-zabbix/" title="Monitoramdno MySQL com Zabbix" target="_blank"&gt; tutorial há muito tempo&lt;/a&gt;, que contemplava alguns itens de monitoramento do MySQL, mas ao pesquisar novamente, achei &lt;a href="https://www.zabbix.com/forum/showthread.php?t=26503" target="_blank"&gt;isso&lt;/a&gt; no fórum do Zabbix e achei legal traduzir pra comunidade, que acaba sobrepondo minha ultima instrução de monitora. O que é muito bom!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2011/03/mysql.gif"&gt;&lt;img class="aligncenter  wp-image-951" title="mysql" src="http://techfree.com.br/wordpress/wp-content/uploads/2011/03/mysql.gif" height="199" alt="" width="299"&gt;&lt;/a&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Para execução desse tutorial, levo em consideração que tem um servidor Zabbix configurado e sabe como operá-lo tranquilamente.&lt;/p&gt;
&lt;p&gt;Primeiro, vamos instalar os pacotes necessários  no servidor a ser monitorado, nesse caso um servidor MySQL qualquer.&lt;br&gt;
# yum install php-cli php-mysql&lt;/p&gt;
&lt;p&gt;Baixe os arquivos abaixo:&lt;br&gt;
&lt;a href="https://mega.co.nz/#!ltkUiKzY!eCEj1RNh5L7YyRFS_k-l-WFIeIYseDOStcunsP9xPLk" target="_blank"&gt;https://mega.co.nz/#!ltkUiKzY!eCEj1RNh5L7YyRFS_k-l-WFIeIYseDOStcunsP9xPLk&lt;/a&gt;&lt;br&gt;
&lt;a target="_blank"&gt; https://mega.co.nz/#!tg0mQQyK!BZOM1irC1o11GWzBESiTgm1ZlvZZzdKHd9ewZG7O3co&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template.png"&gt;&lt;img class="aligncenter  wp-image-1140" title="Importa_Template" src="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template.png" height="52" alt="" width="767"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Acesse sua interface web do Zabbix, clique no link “Configuração” e depois em “Templates”. Em seguida, clique no botão “Importar”.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template2.png"&gt;&lt;img class="aligncenter  wp-image-1141" title="Importa_Template2" src="http://techfree.com.br/wordpress/wp-content/uploads/2013/04/Importa_Template2.png" height="325" alt="" width="382"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Clique no botão “Browse…” e escolha o arquivo baixado no link acima, com o nome mysql.xml. Depois clique no botão “importar”.&lt;/p&gt;
&lt;p&gt;Crie uma pasta com o commando abaixo:&lt;br&gt;
# mkdir -p /usr/local/share/zabbix/plugins&lt;/p&gt;
&lt;p&gt;Configure permissão para usuário do Zabbix, com o comando abaixo:&lt;br&gt;
# chown -R zabbix /usr/local/share/zabbix&lt;/p&gt;
&lt;p&gt;Envie o arquivo zabbix-mysqlmonitor.tar.gz para o servidor de banco de dados MySQL que deseja monitorar.&lt;/p&gt;
&lt;p&gt;Descompacte o arquivo com o comando abaixo:&lt;br&gt;
# tar xvzf zabbix-mysqlmonitor.tar.gz&lt;/p&gt;
&lt;p&gt;Copie o arquivo ss_get_mysql_stats.php para /usr/local/share/zabbix/plugins&lt;/p&gt;
&lt;p&gt;Copie o arquivo zabbixmysql.conf para /etc/zabbix&lt;/p&gt;
&lt;p&gt;Acesse o arquivo /etc/zabbix/zabbix_agentd.conf e acrescente a seguinte linha:&lt;br&gt;
Include=/etc/zabbix/zabbixmysql.conf&lt;/p&gt;
&lt;p&gt;Reinicie o serviço do agente zabbix com o seguinte comando:&lt;br&gt;
# service zabbix-agent restart&lt;/p&gt;
&lt;p&gt;Crie o host em sua interface de monitoramento e associe o template do mysql.&lt;/p&gt;</description><pubDate>Tue, 09 Apr 2013 17:49:03 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/monitorando-mysql-com-zabbix-v2</link><guid>http://softwarelivre.org/gomex/blog/monitorando-mysql-com-zabbix-v2</guid></item><item><title>Balanceando carga de squid para squid</title><description>&lt;p&gt;Primeiro vou explicar o problema e motivação, assim partirei para prática demonstrando como resolvi a questão.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Motivação : Ambiente com 20.000 usuários necessitando de uma solução de proxy de acesso web centralizado.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Precisávamos de um ambiente “parrudo” o suficiente para suportar requisição de 20.000 usuários, sendo que esse ambiente deveria ser construído completamente com Software Livre. Challenge Accepted!&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;img class="aligncenter" title="Squid Logo" src="http://www.squid-cache.org/Artwork/SN2.png" height="177" alt="" style="text-align: start;" width="348"&gt;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;br&gt;
Sabíamos que apenas uma máquina não suportaria toda essa carga e tínhamos também que prover alta-disponibilidade, na modalidade ativo-ativo (pra ficar ainda mais emocionante).&lt;/p&gt;
&lt;p&gt;Chegamos ao seguinte dilema, como balancearemos o tráfego? Uma vez que as soluções prontas são bem caras, comprar estava fora de cogitação. Mais desafio!&lt;/p&gt;
&lt;p&gt;Primeiro pensamos em usar balanceamento via DNS, mas chegamos a conclusão que seria um problema, uma vez que o cache do cliente e aplicações poderia fazer um proxy ficar mais sobrecarregado do que o outro.&lt;/p&gt;
&lt;p&gt;Dai veio a ideia, por que não usar o squid mesmo pra isso? O squid trabalha com esquema de comunicação entre proxies, usando o protocolo &lt;a href="http://en.wikipedia.org/wiki/Internet_Cache_Protocol" title="ICP" target="_blank"&gt;ICP (Internet Cache Protocol).&lt;/a&gt;O squid pode repassar a requisição http para que outro nó possa tratá-la e usando o parâmetro round-robin tudo fica bem mais legal e distribuído.&lt;/p&gt;
&lt;p&gt;Depois de inúmeras pesquisas, muitos possíveis ambientes e retrabalho, chegamos a essa solução de arquitetura:&lt;/p&gt;
&lt;div class="wp-caption aligncenter" style="width: 852px;"&gt;
&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2013/02/Balanceamento_de_carga.png"&gt;&lt;img class="size-full wp-image-1122" title="Balanceamento_de_carga" src="http://techfree.com.br/wordpress/wp-content/uploads/2013/02/Balanceamento_de_carga.png" height="450" alt="" width="842"&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Arquitetura da solução&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Na primeira camada, da esquerda pra direita, basicamente temos dois squid trabalhando como balanceadores da solução, eles recebem toda requisição e repassam a requisição para o que chamo aqui de proxies de acesso.&lt;/p&gt;
&lt;p&gt;A segunda camada  é responsável por fazer todo trabalho pesado do ambiente, uma vez que nessas máquinas rodam todas verificações de filtragem de conteúdo, antivírus, autenticação e afins.&lt;/p&gt;
&lt;p&gt;Os balanceadores apenas são responsáveis por centralizar as requisições e repassar para camada posterior tratar. Isso parece fácil, porém deu um bocado de trabalho, pois não tinha documentação clara de como fazer isso, por conta disso escrevo esse artigo, afim de esclarecer alguns detalhes que tornarão a tarefa menos dolorosa.&lt;/p&gt;
&lt;p&gt;Eu usei CentOS, por uma convenção não formal da empresa, mas acho que funcionará bem com qualquer distro. Vamos lá! Antes de tudo, instale um CentOS padrão, tune ele a seu gosto depois. Não trataremos disso aqui, muito menos do quesito hardening.&lt;/p&gt;
&lt;p&gt;Eu usei a versão 3.1.10 do Squid, mas acho que pode ser usado qualquer versão, apenas mudando um parâmetro ou outro.&lt;/p&gt;
&lt;p&gt;Antes de mais nada, vamos entender como funciona a hierarquização do Squid com o protoco ICP.&lt;/p&gt;
&lt;p&gt;O Squid tem suporte a  repasse de requisição para outros proxies que suportem o protocolo ICP*. Para essa configuração o squid tem um parâmetro chamado cache_peer, que, resumidamente, é responsável pela informação do proxy ao qual ele repassará a solicitação.&lt;/p&gt;
&lt;pre&gt;* Perceba que tenho noção do protocolo HTCP, mas não abordarei ele nesse artigo.&lt;/pre&gt;
&lt;p&gt;Vamos primeiro explicar como funciona configuração da primeira camada.&lt;/p&gt;
&lt;p&gt;&lt;strong style="font-size: 13px; line-height: 19px;"&gt;Balanceadores de carga&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Os balanceadores de carga devem ter o seguinte conteúdo no squid:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;cache_peer 10.2.3.21 parent 3128 3130 round-robin no-query name=squidpeer1 connect-timeout=5 connect-fail-limit=5&lt;br&gt;
cache_peer 10.2.3.22 parent 3128 3130 round-robin no-query name=squidpeer2 connect-timeout=5 connect-fail-limit=5&lt;br&gt;
cache_peer 10.2.3.23 parent 3128 3130 round-robin no-query name=squidpeer3 connect-timeout=5 connect-fail-limit=5&lt;br&gt;
&lt;span style="font-size: 13px; line-height: 19px;"&gt;never_direct allow all&lt;/span&gt;&lt;br&gt;
miss_access allow al&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Segue a explicação detalhada:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cache_peer 10.2.3.21 parent 3128 3130 round-robin no-query name=squidpeer1 connect-timeout=5 connect-fail-limit=5&lt;/p&gt;
&lt;p&gt;cache_peer &amp;lt;ip&amp;gt; &amp;lt;grau&amp;gt; &amp;lt;porta squid destino&amp;gt; &amp;lt;porta icp destino&amp;gt;  &amp;lt;opções&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Perceba que basta informar o ip do proxy de destino, qual o grau de ligação entre deles, que nesse caso é &lt;em&gt;parent&lt;/em&gt;, pois com o grau parente ele funcionará, resumidamente, em apenas uma via, ou seja, o filho sempre perguntará a seu pai, mas nunca o contrário, que para o balanceador de carga é a configuração perfeita.&lt;/p&gt;
&lt;p&gt;As opções usadas tem são&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;round-robin&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Essa opção tem o objetivo de enviar uma solicitação para cada nó, assim balanceando a carga de forma igualitária. Essa opção é indispensável para essa solução.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;no-query&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Essa opção é usada para evitar que o “filho” envie solicitações ICP para o servidor destino, pois não há necessidade de troca de cache ou verificar conteúdo, uma vez que entre os servidores da próxima camada existe uma configuração de troca de objetos do cache.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;span style="font-size: 13px; line-height: 19px;"&gt;never_direct allow all&lt;br&gt;
miss_access allow all&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As opções acima afirmam que esse squid não deverá buscar nenhum dado na internet e sim utilizar seus servidores, configurados como parent, para essa tarefa.&lt;/p&gt;
&lt;p&gt;&lt;strong style="font-size: 13px; line-height: 19px;"&gt;Proxies de acesso&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Esses servidores são responsáveis por receber requisições dos balanceadores de carga e retornar com o objeto solicitado, seja solicitando na internet ou no cache próprio ou de outros membros dessa camada, pois os ativos desse grupo são configurados para consultar se o objeto solicitado existe em seu próprio cache ou em algum outro servidor dessa camada, tudo via comunicação ICP, trocam informações afim de se manterem cientes de quais dados existem em cada cache. Assim evitando uso desnecessário da internet.&lt;/p&gt;
&lt;p&gt;Segue abaixo a configuração necessária.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cache_peer 10.199.254.5 sibling 3128 3130 proxy-only&lt;br&gt;
cache_peer 10.199.254.4 sibling 3128 3130 proxy-only&lt;/p&gt;
&lt;p&gt;cache_peer_access 10.199.254.5 allow all&lt;br&gt;
cache_peer_access 10.199.254.4 allow all&lt;/p&gt;
&lt;p&gt;acl balanceador src 10.2.3.19&lt;br&gt;
http_access allow balanceador&lt;/p&gt;
&lt;p&gt;follow_x_forwarded_for allow all&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Veja que aqui usamos um outro grau de hierarquia de cache, sibling é usado quando se deseja trocar cache de forma horizontal. Nesse caso são três proxies, configurados para trocar informações entre eles.&lt;/p&gt;
&lt;p&gt;A opção nova do cache_peer, proxy-only&lt;em&gt; , &lt;/em&gt;serve para que o objeto obtido de um outro membro do cache, não seja armazenado em outro. Assim evitamos dados duplicados, o que pode onerar o espaço disponível. Uma vez que nossa rede é Gigabit, velocidade de comunicação entre eles não é problema.&lt;/p&gt;
&lt;p&gt;A opção &lt;em&gt;cache_peer_access &lt;/em&gt;permite que um outro servidor proxy faça solicitações ICP para esse host. É possível especificar o que ele pode acessar, mas não é nosso caso.&lt;/p&gt;
&lt;p&gt;O bloco abaixo, é responsável por permitir que os balanceadores façam requisições http para esse host:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;acl balanceador src 10.2.3.19&lt;br&gt;
http_access allow balanceador&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Após configurarmos nosso ambiente, percebemos um problema. O fato de termos um ativo intermediário, fazia com quem as requisições para a segunda camada tivessem como ip de cliente o ip do balanceador, ao invés do cliente real, que solicita para o balanceador ao invés de diretamente a segunda camada.&lt;/p&gt;
&lt;p&gt;Que foi resolvido com essa configuração:&lt;/p&gt;
&lt;p&gt;follow_x_forwarded_for allow all&lt;/p&gt;
&lt;p&gt;Esse parâmetro permite que seja usado o ip do cliente final, ao invés dos intermediários para tudo que tange o squid e os produtos que estejam ligados ao squid, tal como squidguard.&lt;/p&gt;
&lt;p&gt;Após essa configuração especial, executamos os serviços e pronto.&lt;/p&gt;
&lt;p&gt;Claro que faltam as outras configurações comuns do squid, mas não é o objetivo desse documento.&lt;/p&gt;
&lt;p&gt;Eu já escrevi um &lt;a href="http://techfree.com.br/wordpress/2009/01/18/tuning-no-squid/" title="Tunning Squid" target="_blank"&gt;post&lt;/a&gt; sobre tunning do Squid, talvez esteja um pouco velho, mas acredito que ainda sirva pra algo.&lt;/p&gt;
&lt;p&gt;Fontes :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.squid-cache.org/Doc/config/cache_peer/"&gt;http://www.squid-cache.org/Doc/config/cache_peer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.squid-cache.org/Doc/config/follow_x_forwarded_for/"&gt;http://www.squid-cache.org/Doc/config/follow_x_forwarded_for&lt;/a&gt;&lt;/p&gt;</description><pubDate>Mon, 25 Feb 2013 12:12:56 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/balanceando-carga-de-squid-para-squid</link><guid>http://softwarelivre.org/gomex/blog/balanceando-carga-de-squid-para-squid</guid></item><item><title>Software Freedom Day 2012 – Salvador</title><description>&lt;p&gt;O Software Freedom Day (SFD) é o dia da celebração mundial do Software Livre e de Código Aberto – também chamado de FOSS. O evento acontece desde 2004 simultaneamente em diversas cidades do mundo e é coordenado globalmente pela Software Freedom International, uma organização sem fins lucrativos criada exclusivamente para esse propósito.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://techfree.com.br/wordpress/wp-content/uploads/2012/08/logo_2012_SFD_big_big.png"&gt;&lt;img class="aligncenter size-full wp-image-1117" title="logo_2012_SFD_big_big" src="http://techfree.com.br/wordpress/wp-content/uploads/2012/08/logo_2012_SFD_big_big.png" height="128" alt="" width="150"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Esse ano acontecerá no dia 15 de setembro, sábado.&lt;/p&gt;
&lt;p&gt;Em Salvador acontecerá na FTC, na paralela.&lt;/p&gt;
&lt;p&gt;As chamadas de trabalho estão abertas, participe! &lt;a href="http://goo.gl/lE3hh" target="_blank"&gt;http://goo.gl/lE3hh&lt;/a&gt;&lt;br&gt;
Também é possível ajudar na divulgação: &lt;a href="/sfdssa/blog/divulgue" target="_blank"&gt;http://softwarelivre.org/sfdssa/blog/divulgue&lt;/a&gt;&lt;br&gt;
Para saber mais: &lt;a href="http://www.softwarefreedomday.org/" target="_blank"&gt;http://www.softwarefreedomday.org/&lt;/a&gt;&lt;br&gt;
Outros locais que terão o evento: &lt;a href="http://www.softwarefreedomday.org/map/index.php?year=2012" target="_blank"&gt;http://www.softwarefreedomday.org/map/index.php?year=2012&lt;/a&gt;&lt;/p&gt;</description><pubDate>Thu, 13 Sep 2012 01:57:52 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/software-freedom-day-2012-%E2%80%93-salvador</link><guid>http://softwarelivre.org/gomex/blog/software-freedom-day-2012-%E2%80%93-salvador</guid></item><item><title>Monitorando a quantidade de conexões simultâneas do seu Firewall Iptables, com Zabbix</title><description>&lt;p&gt;Informações como essa são importante para saber o quanto seu firewall está roteando, ou seja, para um roteador, para um administrador de sistema, esse é um dado MUITO importante.&lt;/p&gt;
&lt;p&gt;Vamos a linha de comando:&lt;/p&gt;
&lt;p&gt;Primeiro verifique se tem instalado o pacote conntrack_tool.&lt;/p&gt;
&lt;p&gt;No Centos 6, temos esse &lt;a href="http://centos.alt.ru/pub/repository/centos/6/x86_64/conntrack-tools-1.0.0-1.el6.x86_64.rpm"&gt;pacote&lt;/a&gt;, que pode ser instalado com esse comando:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# yum localinstall http://centos.alt.ru/pub/repository/centos/6/x86_64/conntrack-tools-1.0.0-1.el6.x86_64.rpm&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
Esse pacote instala um software interessante, que será responsável de nos prover essa preciosa informação, porém o software instalado é acessível apenas para o usuário root, ou seja, precisaremos configurar a permissão de acesso para o usuário do zabbix.&lt;/p&gt;
&lt;p&gt;Verifique se tem o software sudo instalado com o comando abaixo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# rpm -qa | grep sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Caso contrário instale o software:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# yum install sudo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Acesse o arquivo &lt;strong&gt;/etc/sudoers &lt;/strong&gt;e adicione a seguinte linha no final do arquivo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zabbix ALL=(ALL) NOPASSWD: /usr/sbin/conntrack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ainda nesse arquivo, comente a linha abaixo:&lt;/p&gt;
&lt;p&gt;Defaults:     requiretty&lt;/p&gt;
&lt;p&gt;Agora vamos a configuração final, no arquivo /etc/zabbix/zabbix_agentd.conf adicione a seguinte linha:&lt;/p&gt;
&lt;p&gt;&lt;code&gt; UserParameter=iptables.conexoes,sudo /usr/sbin/conntrack -C&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pronto! Agora reinicie o daemon do agente zabbix com o comando abaixo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# service zabbix-agent restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;No seu servidor zabbix, configure o item com a chave (key) denominada  iptables.conexões, com retorno de inteiro.&lt;/p&gt;</description><pubDate>Thu, 13 Sep 2012 01:57:50 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/monitorando-a-quantidade-de-conexoes-simultaneas-do-seu-firewall-iptables-com-zabbix</link><guid>http://softwarelivre.org/gomex/blog/monitorando-a-quantidade-de-conexoes-simultaneas-do-seu-firewall-iptables-com-zabbix</guid></item><item><title>Autenticando SQUID com OpenLDAP no Centos 6</title><description>&lt;p&gt;Para essa configuração o squid pré-compilado que está no repositório resolve, ou seja:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# yum install squid&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Agora vamos a configuração adicional do seu squid.conf, que depois irei explicar cada parâmetro:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth_param basic children 5&lt;br&gt;
auth_param basic realm Meu Proxy&lt;br&gt;
auth_param basic credentialsttl 2 hours&lt;br&gt;
auth_param basic casesensitive on&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;auth_param basic program /usr/lib64/squid/squid_ldap_auth -b “dc=meudominio,dc=net,dc=br” -f “uid=%s” &amp;lt;ip do servidor OpenLDAP&amp;gt;&lt;/p&gt;
&lt;p&gt;external_acl_type ldap_group %LOGIN /usr/lib64/squid/squid_ldap_group -d -b ou=Groups,dc=meudominio,dc=net,dc=br -f “(&amp;amp;(memberuid=%u)(cn=%g))” -h &amp;lt;ip do servidor OpenLDAP&amp;gt;&lt;/p&gt;
&lt;p&gt;acl password proxy_auth REQUIRED&lt;br&gt;
http_access allow password&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;auth_param&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;É a sintaxe responsável por configurar os parâmetro de configuração, como o nome mesmo já sugere, ela pode ter 4 opções primárias de autenticação:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;basic&lt;/li&gt;
&lt;li&gt;digest&lt;/li&gt;
&lt;li&gt;negotiate&lt;/li&gt;
&lt;li&gt;ntlm&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Para esse tutorial, vou apenas me atentar a primeira, que é &lt;strong&gt;basic&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Esse é o metodo de autenticação http, onde ela é feita pelo próprio navegador web, geralmente via pop-up solicitando usuário e senha.&lt;/p&gt;
&lt;p&gt;Agora vamos comentando linha a linha:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;auth_param basic children 5&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Com essa sintaxe, é possível configurar o número de processos de autenticação máximos, ou seja, caso esteja com lentidão na autenticação, experimente aumentar esse valor.&lt;/p&gt;
&lt;p&gt;Após esses parâmetros, é possível adicionar também o paramêtro “&lt;strong&gt;startup” &lt;/strong&gt; e “&lt;strong&gt;concurrency”  &lt;/strong&gt;que são utilizados para informar quantos processos serão iniciados junto com o squid e quantos serão concorrentes.&lt;/p&gt;
&lt;p&gt;Ex: auth_param basic children 10 startup=4 concurrency=2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;auth_param basic realm Meu Proxy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;Com esse parâmetro é possível informar o texto que aparecerá no Pop-up de solicitação de usuário e senha, no navegador.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; auth_param basic credentialsttl 2 hours&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;/strong&gt;Com essa opção é possível informar o tempo de vida da autenticação, ou seja, após duas horas o cliente será obrigado a reautenticar.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; auth_param basic casesensitive on&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Especifica se o nome do usuário é sensível a diferença de caixa ou não (se é maiúsculo ou não).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;auth_param basic program /usr/lib64/squid/squid_ldap_auth -b “dc=meudominio,dc=net,dc=br” -f “uid=%s” &amp;lt;ip do servidor OpenLDAP&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Agora temos o programa, que é o responsável por conectar no nosso servidor OpenLDAP e verificar se a senha informada está correta ou não, ou seja, o usuário e senha informado no navegador é passado para o squid, e esse comando checa de fato se a senha está correta.&lt;/p&gt;
&lt;p&gt;Perceba que em alguns outros sistemas, o caminho do programa pode mudar, ou seja, utilize o locate para verificar onde está seu “squid_ldap_auth”.&lt;/p&gt;
&lt;p&gt;O parâmetro &lt;strong&gt;-b &lt;/strong&gt;informa qual o caminho de consulta dos usuários, coloquei o domínio todo, mas poderia ser uma unidade organizacional especifica.&lt;/p&gt;
&lt;p&gt;O parâmetro &lt;strong&gt;-f &lt;/strong&gt;informa qual o filtro utilizado para encontrar o usuário, que no nosso caso é &lt;strong&gt;uid&lt;/strong&gt;, sendo que &lt;strong&gt;%s &lt;/strong&gt;será interpretador pelo squid como o usuário, ou seja, mantenha esse parâmetro dessa forma.&lt;/p&gt;
&lt;p&gt;Todo programa executado pelo auth_param program deve ter dois retornos; &lt;strong&gt;OK&lt;/strong&gt; ou &lt;strong&gt;ERR&lt;/strong&gt;, ou seja, posteriormente, quando falarmos sobre lista de acesso, toda verificação booleana será feita com base nesses retornos.&lt;/p&gt;
&lt;p&gt;Agora vamos preparar o “meio de campo” para criação das ACLs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;external_acl_type &amp;lt;nome do tipo de ACL&amp;gt; %LOGIN /usr/lib64/squid/squid_ldap_group -d -b ou=Groups,dc=meudominio,dc=net,dc=br -f “(&amp;amp;(memberuid=%u)(cn=%g))” -h &amp;lt;ip do servidor OpenLDAP&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Essa sintaxe define um tipo de ACL com base em um programa auxiliar, que no nosso caso é para autenticação, ou seja, escolha seu nome de ACL e vamos para cada opção dessa sintaxe:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/usr/lib64/squid/squid_ldap_group : &lt;/strong&gt;Dado um nome de usuário e grupo, esse programa é utilizado para verificar se o usuário informado via navegador está no grupo ou não, ou seja,  o tipo de ACL que estamos construindo servirá para criar regras com base em grupos do LDAP.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-d : &lt;/strong&gt;Ativa o modo debug. Isso é muito bom para testes, em produção remova essa opção.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-b &lt;/strong&gt;: Aqui será configurado o caminho de pesquisa dos grupos, escolha o que corresponde a sua árvore LDAP.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-f &lt;/strong&gt; : Informa qual filtro utilizado para verificar se o usuário está nesse grupo ou não.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;-h : &lt;/strong&gt;ip do servidor OpenLDAP&lt;/p&gt;
&lt;p&gt;Agora vamos para construção das ACLs de fato:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;acl &amp;lt;nome da ACL&amp;gt; proxy_auth REQUIRED&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A sintaxe &lt;strong&gt;acl&lt;/strong&gt; é responsável por especificar uma acl, a opção &lt;strong&gt;proxy_auth&lt;/strong&gt; executa o programa do auth_param, já explicado nesse texto afim de fazer determinada configuração, que no nosso caso a opção final &lt;strong&gt;REQUIRED &lt;/strong&gt;indica que qualquer usuário informado será aceito por essa ACL, porém caso prefira, poderia ser construido uma ACL para verificar se o usuário e senha informado eram um determinado nome, ou seja:&lt;/p&gt;
&lt;p&gt;Ex: acl &amp;lt;nome da ACL&amp;gt; proxy_auth rafael&lt;/p&gt;
&lt;p&gt;Para ilustrar, irei criar uma ACL de grupo:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;acl &amp;lt;nome da acl&amp;gt; external &amp;lt;nome do tipo de ACL&amp;gt; &amp;lt;nome do grupo&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Perceba que nessa sintaxe, é informado a opção &lt;strong&gt;external, &lt;/strong&gt;que indica que essa ACL é do externa, ou seja, criada com o parâmetro &lt;strong&gt;external_acl_type.&lt;/strong&gt; Agora temos uma ACL que verifica se o usuário X pertence ao grupo Y, ou não.&lt;/p&gt;
&lt;p&gt;Pronto! Agora você já tem todas as ACLs, basta configurar as regras com o parâmetro &lt;strong&gt;http_access.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fontes :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.squid-cache.org" title="http://www.squid-cache.org" target="_blank"&gt;squid-cache.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://linux.die.net/man/8/squid_ldap_group"&gt;man squid_ldap_group&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wiki.squid-cache.org/"&gt;wiki.squid-cache.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description><pubDate>Thu, 13 Sep 2012 01:57:48 +0000</pubDate><link>http://softwarelivre.org/gomex/blog/autenticando-squid-com-openldap-no-centos-6</link><guid>http://softwarelivre.org/gomex/blog/autenticando-squid-com-openldap-no-centos-6</guid></item></channel></rss>