<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Feed RSS do(a) Lucas Alberto Souza Santos</title><link>http://softwarelivre.org/lucasa</link><description>Conteúdo do(a) Lucas Alberto Souza Santos publicado no Software Livre Brasil</description><item><title>FISL13</title><description>&lt;br&gt;
&lt;div align="center"&gt;&lt;span class="img"&gt;&lt;a href="/articles/0043/6010/banner4.jpg" border="0" alt=""&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
Esse ano temos a 13ª edição do Fórum Internacional Software Livre - FISL13. Se puderem, façam o esforço de irem prestigiar nosso evento. Estou mais uma vez colaborando na organização da programação cultural do evento.&lt;br&gt;
&lt;br&gt;
&lt;br&gt;</description><pubDate>Thu, 28 Jun 2012 19:33:43 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/fisl13</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/fisl13</guid></item><item><title>Mandelbrot interativo em ProcessingJS</title><description>&lt;p&gt;Brincando um pouco com html5 canvas &lt;a href="http://studio.sketchpad.cc/sp/pad/view/ro.9Z75Pnk1m-EVn/rev.175"&gt;portei para processing.js&lt;/a&gt; o popular algoritmo que gera o fractal Mandelbrot.&lt;/p&gt;
&lt;p&gt;Clique com botão do mouse para fazer zoom no fractal.&lt;/p&gt;
&lt;p&gt;Edite o código online em &lt;a href="http://studio.sketchpad.cc/kFOOepXahf"&gt;http://studio.sketchpad.cc/kFOOepXahf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</description><pubDate>Thu, 08 Mar 2012 19:22:15 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/mandelbrot-interativo-em-processingjs</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/mandelbrot-interativo-em-processingjs</guid></item><item><title>Novas funcionalidades para o Landell</title><description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src="/image_uploads/0005/2533/landell-box_big.jpg?1305247682" height="134" alt="" style="display: block; margin-left: auto; margin-right: auto;" width="150"&gt;&lt;/p&gt;
&lt;p&gt;Nos últimos dias tenho me dedicado a estudar um pouco de Python e GTK+ motivado pelas novas funcionalidades que estou adicionando em &lt;a href="https://github.com/lucasa/landell-fgdp"&gt;meu fork do código&lt;/a&gt; da ferramenta de streaming de vídeo &lt;a href="http://wiki.softwarelivre.org/Landell/SobreLandell"&gt;Landell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A principal funcionalidade nova presente no repositório git "landel-fgdp" é o suporte ao protocolo de streaming FGDP utilizado pelo sistema &lt;a href="http://flumotion.net/"&gt;Flumotion&lt;/a&gt;, que é a mais completa solução de streaming livre. Agora é possível enviar vídeo Ogg ou WebM do landell para um servidor Flumotion. Como o código do flumotion é python licenciado pela GPL, bastou copiar o código das classes que implementam o protocolo FGPD e fazer a integração com o sistema de Outputs do landell.&lt;/p&gt;
&lt;p&gt;Outra inovação é um protótipo de overlay de mensagens de redes de microblogging [screenshot abaixo]. Já é possível configurar a ferramenta para carregar as mensagens do Twitter (postadas por um usuário ou todo o feed de uma #hashtag) e apresentá-las na tela do streaming com o avatar e a mensagem. O elemento gstreamer utilizado foi o rsvgoverlay o qual desenha imagens SVG nos quadros de vídeo. Em breve devo incluir o suporte a rede Identi.ca e ajeitar a interface gráfica de configuração.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src="/articles/0041/0518/twitteroverlay.png" alt=""&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Outras modificações não menos importantes são a inclusão de novos parâmetros no encoder do codec VP8 [imagem abaixo] e a geração de nomes válidos para arquivos de saída que já existam no disco (de suma importância para evitar que dados já gravados sejam sobrescritos acidentalmente).&lt;/p&gt;
&lt;p&gt;Com este fork + um servidor flumotion é possível realizar transmissões profissionais no padrão WebM.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;img src="/articles/0041/0519/vp8enc.png" height="331" alt="" width="276"&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;(crédito para o belo logotipo do projeto criado pelo amigo &lt;a href="/valessiobrito"&gt;Valéssio&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;lucasa&lt;/p&gt;</description><pubDate>Wed, 07 Mar 2012 18:27:45 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/novas-funcionalidades-para-o-landell</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/novas-funcionalidades-para-o-landell</guid></item><item><title>Transcodificação e streaming de áudio e vídeo com Nodejs</title><description>&lt;br&gt;
Avancei nos experimentos com transcodificação de áudio e vídeo com nodejs e gstreamer. Agora é possível receber fluxos em diversos formatos e transcodificar para um fluxo HTTP em Ogg ou WebM. Código aqui: &lt;a href="https://github.com/lucasa/node-streamer" class="wiki external"&gt;https://github.com/lucasa/node-streamer&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
Não recomendo o uso em produção, está mais para um quebra-galho.&lt;br&gt;
&lt;br&gt;
TRANSCODING AND STREAMING&lt;br&gt;
&lt;br&gt;
Live transcoding of audio streams from RTMP, OGG, MP3, WMV to Ogg+Vorbis or MP3.&lt;br&gt;
&lt;br&gt;
Command line: "node node-transcoder-ogg-mp3.js URL STREAM_FILE_OUT&lt;a href="http://estudiolivre.org/.mp3%20or%20.ogg" class="wiki"&gt;.mp3 or .ogg&lt;/a&gt; PORT"&lt;br&gt;
&lt;br&gt;
Example: "node node-transcoder-ogg-mp3.js &lt;a class="wiki external"&gt;mms://karazhan.senado.gov.br/wmtencoder/radio.wmv&lt;/a&gt; senado.ogg 9100"&lt;br&gt;
&lt;br&gt;
The output url is: &lt;a href="http://localhost:9100/senado.ogg" class="wiki external"&gt;http://localhost:9100/senado.ogg&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
Live transcoding of video streams from RTMP, OGG, WebM, WMV to Ogg+Theora or WebM.&lt;br&gt;
&lt;br&gt;
Command line: "node node-transcoder-ogg-thera.js URL STREAM_FILE_OUT&lt;a href="http://estudiolivre.org/.webm%20or%20.ogg" class="wiki"&gt;.webm or .ogg&lt;/a&gt; PORT"&lt;br&gt;
&lt;br&gt;
Example: "node node-transcoder-ogg-theora.js &lt;a class="wiki external"&gt;mms://midia.al.rs.gov.br/tval&lt;/a&gt; assembeliars.ogg 1234"&lt;br&gt;
&lt;br&gt;
The output url is: &lt;a href="http://localhost:1234/assembeliars.ogg" class="wiki external"&gt;http://localhost:1234/assembeliars.ogg&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
&lt;br&gt;</description><pubDate>Tue, 10 Jan 2012 01:28:41 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/transcodificacao-e-streaming-de-audio-e-video-com-nodejs</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/transcodificacao-e-streaming-de-audio-e-video-com-nodejs</guid></item><item><title>Agora Tem Que Hackear</title><description>&lt;p&gt;Post publicado originalmente no blog coletivo &lt;a href="http://www.trezentos.blog.br/?p=6554"&gt;Trezentos&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Agora Tem Que Hackear&lt;/h2&gt;
&lt;p&gt;Por Lucasa.&lt;/p&gt;
&lt;p&gt;Bom, e agora!?&lt;br&gt; A Lei de Geral de Acesso a Informação &lt;a href="http://www.youtube.com/watch?v=1FvzHNjja0U"&gt;foi sancionada&lt;/a&gt;. O que nós cidadãos faremos? O que &lt;a href="http://queremossaber.org.br/"&gt;Queremos Saber&lt;/a&gt;? A bola está conosco agora. O Brasil faz as pazes com um dos princípios democráticos fundamentais que é dar acesso público e livre às informações públicas. Ainda bem que nosso estado não é mínimo e por isso há aí alguns Petabytes de dados passíveis de cópia. Se contarmos com abrangência de conteúdos que esta lei disponibiliza para consulta, há um vasto território de cruzamentos recombinantes das informações geradas pelo ecossistema estatal.&lt;/p&gt;
&lt;p&gt;Agora o gargalo está na falta de preparo para cumprir a lei e também na má vontade dos que se acham proprietários de determinados tipos de conteúdo. Este é um cenário complexo que podemos considerar como o marco oficial do Estado Brasileiro pós-ditadura na Sociedade da Informação e, por que não, no amadurecimento de uma &lt;a href="http://www.2i2p.ba.gov.br/artigo/a-nova-esfera-publica-segundo-castells?&amp;amp;owa_medium=feed&amp;amp;owa_sid="&gt;Esfera Pública&lt;/a&gt; e na legalização da prática do &lt;a href="http://onibushacker.org/sobre/"&gt;hacking cívico&lt;/a&gt; (&lt;a href="http://www.observadorpolitico.org.br/2011/10/6350/"&gt;doa a quem doer&lt;/a&gt;). Agora não dependemos de boa vontade, apenas de conseguir mobilizar multidões e pedir em coro: “- libera aí ‘chefia’!”. Espero que se torne prática corriqueira a &lt;a href="http://www.cgu.gov.br/acessoainformacao/apresentacoes.asp"&gt;reflexão e o questionamento&lt;/a&gt; da propriedade intelectual do Estado. Eu acredito que a produção técnica e cultural criada pelos entes públicos deve ficar livre para ser redistribuída, transformada e utilizada para qualquer fim, ou seja, coberta por uma licença de  domínio público ou, melhor ainda, numa licença Copyleft. Estão livres, segundo esta interpretação stricto senso da lei, por exemplo, o material educativo criado para dar treinamento à funcionários públicos, todos os bancos de dados do IBGE e também todos os softwares já criados por todos os órgãos estatais para execução de seus próprios processos, inclusive a documentação dos projetos futuros. E isso não é pouca coisa não, o estado se torna uma grande maquina de inovação ao abrir suas entranhas para o remix público. Um prato cheio para hackers de informações como o bando da &lt;a href="http://thacker.com.br/"&gt;Transparência Hackday&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Não é mais necessário debater se os softwares criados pelo governo deveriam ser livres, agora eles são inegavelmente públicos. Se um burocrata de plantão quiser salvaguardar algum software ou outro tipo de informação estatal dos olhos do povo, que registre este como sendo de acesso restrito, vá pedir a assinatura da presidente da república e publique no diário oficial. Lembremos o caso do programa &lt;a href="http://www.fsfla.org/svnwiki/anuncio/2007-04-irpf2007-livre"&gt;IRPF&lt;/a&gt; -  um código fonte não é um banco de dados. Os ativistas do software Livre e da cultura livre podem ajudar apresentar essas novidades cívicas à população brasileira, que então poderá se organizar e reclamar às vistas documentos e processos que estejam velados.&lt;br&gt; Pra deixar as coisas mais escuras e mais interessantes: Os pedidos de acesso a uma base nova que  ainda não tenha sido publicada devem ser abertos e amplamente divulgados? Se fomentado oficialmente, esse feedback retroalimentaria o processo, criando uma interessante fonte de meta-informação, a informação a respeito do processo de consulta de informações. Ter algo como um “trending topics” dos pedidos de acesso a dados estatais é algo bem interessante.&lt;/p&gt;
&lt;p&gt;Não adianta só reclamar, &lt;a href="http://groups.google.com/group/thackday"&gt;tem que hackear&lt;/a&gt;.&lt;br&gt; #Ocupar o Estado é preciso.&lt;/p&gt;</description><pubDate>Sat, 03 Dec 2011 15:54:11 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/agora-tem-que-hackear</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/agora-tem-que-hackear</guid></item><item><title>Criando um servidor de streaming de vídeo com Nodejs</title><description>&lt;a href="http://nodejs.org/" class="wiki external"&gt;Nodejs&lt;/a&gt; é um a tecnologia nova que tem agradado a vários desenvolvedores web pois permite executar código javascript de alto nível no servidor possibilitando a criação de uma camada middleware de comunicação com o browser cliente. Essa característica de comunicação por pacotes HTTP simplifica a criação de um servidor de vídeo usando gstreamer.&lt;br&gt;
&lt;br&gt;
Comecei os experimentos de streaming de vídeo motivado por este &lt;a href="http://delog.wordpress.com/2011/04/26/stream-live-webm-video-to-browser-using-node-js-and-gstreamer/" class="wiki external"&gt;post do blog Devendra @ Work&lt;/a&gt; que mostra como utilizar sockets para receber os dados da saída do pipeline gstreamer (não posso esquecer dos papos legais sobre video livre com o amigo &lt;a href="http://blog.comum.org/" class="wiki external"&gt;Lincon&lt;/a&gt;). Por agora estou entretido em criar um servidor de streaming utilizando o elemento "tcpserversink" que trata de forma transparente as conexões e desconexões de sockets clientes. O &lt;a href="http://github.com/lucasa/node-streamer" class="wiki external"&gt;node-streamer&lt;/a&gt; responde às requisições GET do programa cliente, seja ele um navegador ou player de vídeo, com uma stream de pacotes recebidos do socket conectado ao servidor TCP do pipeline. Simples, né!?&lt;br&gt;
&lt;br&gt;
Vou continuar os experimentos de streaming com a implementação de um pipeline de transcodificação de fluxos de áudio ao vivo (ogg para mp3 e vice versa) e também a criação de uma interface html para configuração do pipeline a ser executado, possibilitando o uso do node-streamer sem precisar lidar diretamente com o código javascript.&lt;br&gt;
&lt;br&gt;
Para quem quiser começar a brincar com nodejs, sigam o roteiro da instalação no GNU/Linux que meu amigo Maurício Vieira &lt;a href="http://mauriciovieira.net/blog/post/quick-install-nodejs-home" class="wiki external"&gt;postou&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;</description><pubDate>Wed, 26 Oct 2011 10:08:47 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/criando-um-servidor-de-streaming-de-video-com-nodejs</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/criando-um-servidor-de-streaming-de-video-com-nodejs</guid></item><item><title>IV Encontro Nordestino de Software Livre</title><description>&lt;div align="center"&gt;&lt;img title="IV Encontro Nordestino de Software Livre" src="http://rn.softwarelivre.org/ensl4/wp-content/uploads/fullbanner.gif" alt="IV Encontro Nordestino de Software Livre"&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
No &lt;a href="http://rn.softwarelivre.org/ensl4" class="wiki external"&gt;IV ENSL&lt;/a&gt; serão apresentadas palestras técnicas, painéis e casos de sucesso em empresas, instituições de ensino e órgãos públicos com o uso e desenvolvimento de Software Livre. Esse ano, em especial, dentro do IV ENSL também ocorrerão o VII Fórum GNOME e o III Fórum KDE Brasil – Edição Nordeste, ambos eventos de âmbito nacional. O público estimado para esta edição do evento é composto por profissionais e entusiastas da Tecnologia da Informação e Comunicação (TIC), professores e estudantes, reunindo representantes das esferas empresarial, governamental, acadêmica e da sociedade civil.&lt;br&gt;
&lt;br&gt;
O envio de propostas pode ser feito até o dia 20 de setembro de 2010, no sistema de submissões: &lt;a href="http://rn.softwarelivre.org/documentos/papers/speaker/" class="wiki external"&gt;http://rn.softwarelivre.org/documentos/papers/speaker/&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
Eu irei ao evento representando o SERPRO e apresentarei a palestra Transmissão de Vídeo com Software Livre. Farei um compacto da oficina de mesmo título a que realizaei no CONSEGI 2010.&lt;br&gt;</description><pubDate>Mon, 13 Sep 2010 04:33:42 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/iv-encontro-nordestino-de-software-livre</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/iv-encontro-nordestino-de-software-livre</guid></item><item><title>Saiu o release 0.6 do programa de streaming de vídeo sltv</title><description>Só pra avisar que saiu o release 0.6 do sltv.&lt;br&gt;
&lt;br&gt;
SLTV v0.6 (2010/03/03), baixe o tarball aqui: &lt;a href="http://sltv.holoscopio.com/sltv-0.6.tar.gz" class="wiki external"&gt;http://sltv.holoscopio.com/sltv-0.6.tar.gz&lt;/a&gt;&lt;br&gt;
Mais informações aqui: &lt;a href="http://sltv.holoscopio.com/" class="wiki external"&gt;http://sltv.holoscopio.com/&lt;/a&gt;&lt;br&gt;
&lt;br&gt;
O pacote para Debian também foi liberado, acesso o link acima para informações sobre a instalação.&lt;br&gt;
Para baixar a versão de desenvolvimento acesse o &lt;a href="http://wiki.softwarelivre.org/TV/ProjetoSLTV" class="wiki external"&gt;wiki do projeto&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;
Notas da última versão (0.6):&lt;br&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt; suporte a múliplas saídas simultâneas;
&lt;/li&gt;
&lt;li&gt; cada saída possui sua própria configuração, incluindo configurações de encoding;
&lt;/li&gt;
&lt;li&gt; suporte a versões do Debian Lenny do gstreamer e python;
&lt;/li&gt;
&lt;li&gt; várias mudanças cosméticas na interface;
&lt;/li&gt;
&lt;li&gt; remoção de UI para escolha de encoding;
&lt;/li&gt;
&lt;li&gt; mudanças de vários defaults nas configurações.
&lt;/li&gt;
&lt;/ul&gt;</description><pubDate>Thu, 18 Mar 2010 04:06:56 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/saiu-o-release-0.6-do-programa-de-streaming-de-video-sltv</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/saiu-o-release-0.6-do-programa-de-streaming-de-video-sltv</guid></item><item><title>Movimento defende a democratização da banda larga</title><description>Movimento defende a democratização da banda larga&lt;br&gt;
&lt;br&gt;
Provedores independentes e movimentos sociais gaúchos criaram o movimento em defesa da democratização da banda larga. Os pequenos provedores reivindicam que o Plano Nacional de Banda Larga – PNBL, em elaboração pelo governo federal, contemple os provedores independentes. Participaram da reunião pequenos provedores, representantes da Associação Brasileira de Radiodifusão Comunitária – ABRAÇO Nacional, da Central de Movimentos Populares, do movimento do software livre e do Movimento Música para Baixar – MPB.&lt;br&gt;
&lt;br&gt;
O empresário Felipe Gorniski denunciou os preços exorbitantes cobrados pelas empresas de telecomunicações para fornecer as linhas tronco (backbone). As teles chegam a cobrar 700 mil reais por mês por uma linha de um gigabyte. Ele, também, criticou o valor exorbitante cobrado pelo Departamento Autônomo de Estradas de Rodagem – DAER – para permitir a colocação de rede de fibra ótica na faixa de domínio das estradas estaduais: 4.800,00 reais por quilômetro de rede de fibra, inviabilizando a instalação de redes próprias pelos provedores independentes. A alternativa encontrada é a utilização de links de micro ondas entre Porto Alegre e as cidades do interior.&lt;br&gt;
&lt;br&gt;
Os provedores independentes prestam serviços de inclusão digital, fornecendo banda larga, gratuitamente, para órgãos públicos e movimentos sociais. Enquanto as teles, que receberam recursos do governo federal para levar a banda larga para as escolas públicas, não atendem toda a rede escolar e muitas instituições de ensino pagam por um serviço que deveria ser gratuito. O movimento defende que o Programa Nacional de Banda Larga assegure recursos para os pequenos provedores. Em contrapartida eles se comprometem a oferecer banda larga gratuita para associações, órgãos públicos e movimentos sociais, o que já ocorre hoje.&lt;br&gt;
&lt;br&gt;
O movimento vai solicitar uma audiência pública na Assembléia Legislativa para debater o PNBL e buscar a adesão de novas entidades e movimentos sociais. A próxima reunião será no dia nove de março (quarta-feira), às 18h30min na Assembléia Legislativa.&lt;br&gt;
&lt;br&gt;
Contatos: Henrique (51) 3062 7667&lt;br&gt;
&lt;br&gt;
Luis Carlos de Almeida – Reg. DRT/RS 9752&lt;br&gt;
(51) 9199 7636&lt;br&gt;</description><pubDate>Wed, 10 Mar 2010 04:07:15 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/movimento-defende-a-democratizacao-da-banda-larga</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/movimento-defende-a-democratizacao-da-banda-larga</guid></item><item><title>A evolução da ferramenta de transmissão de vídeo sltv</title><description>&lt;p style="text-align: center;"&gt;&lt;img src="/images/0000/1516/tvsl_big.png?1243813267" height="79" alt="Logo da TV SL" width="150" style="vertical-align: middle;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt; Estou a algum tempo com vontade de parar e contar o que anda acontecendo no projeto de desenvolvimento da &lt;a href="https://wiki.softwarelivre.org/TV/ProjetoSLTV" class="wiki"&gt;ferramenta sltv&lt;/a&gt;, como fiz &lt;a href="http://estudiolivre.org/tiki-view_blog_post.php?blogId=42&amp;amp;postId=1125" class="wiki"&gt;a algum tempo atrás&lt;/a&gt;. A principal novidade é que o sltv está sendo implementado em &lt;strong&gt;Python&lt;/strong&gt;. Numa decisão estratégica nós da &lt;a href="http://example.com/" class="wiki external"&gt;TV Software Livre&lt;/a&gt; decidimos mudar a linguagem de programação da ferramenta, de Java para Python, mas mantendo o framework gstreamer como o motor multimídia do software.&lt;br&gt; &lt;br&gt; A experiência que tive com o desenvolvimento do prototipo Java, serviu de base para a avaliação de que python é realmente uma linguagem mais próxima dos softwares multimídia. Tive dificuldades em encontrar material referente ao suporte multimídia na plataforma Java, já para Python há toda uma miríade de projetos multimídia de código aberto que usam gstreamer. Além disso, a comunidade de desenvolvedores de projetos python é mais colaborativa e livre do que a comunidade de devs Java, pois, embora seja a linguagem mais popular do mundo, após todos esses anos Java ainda tem foco no mundo empresarial, salvo parcas exceções.&lt;br&gt; &lt;br&gt; Contamos agora com a participação da empresa mineira &lt;a href="http://holoscopio.com/"&gt;Holoscópio&lt;/a&gt;&lt;a href="http://estudiolivre.org/Holosc%C3%B3pio" class="wiki"&gt;&lt;/a&gt;, responsável por implementar o sltv. Os desenvolvedores da Holoscópio mestres em gstreamer são: &lt;a href="http://holoscopio.com/" class="wiki external"&gt;Thadeu Cascardo&lt;/a&gt;, &lt;a href="http://wiki.softwarelivre.org/Main/LucianaFujii" class="wiki external"&gt;Luciana Fujii&lt;/a&gt; e &lt;a href="http://estudiolivre.org/el-user.php?view_user=metal" class="wiki"&gt;Marcelo "metal"&lt;/a&gt;(colega daqui do EL).&lt;br&gt; Contribuem no projeto &lt;a href="http://wiki.softwarelivre.org/Main/LuisFelipe" class="wiki external"&gt;Luis Felipe&lt;/a&gt; e &lt;a href="http://twitter.com/magicofuxu" class="wiki external"&gt;Fabrício Solagna&lt;/a&gt; da TV Software Livre, e os mineiros Lincoln de Sousa e Samuel Vale.&lt;br&gt; &lt;br&gt; Estamos versionando o código com &lt;a href="http://pt.wikipedia.org/wiki/Git" class="wiki external"&gt;Git&lt;/a&gt;, um sistema de controle de versão distribuído. Para desenvolver o protótipo java utilizei o sistema de controle de versão Bazaar, disponível no ambiente Launchpad. Mudar de bazzar para git foi uma mudança tranquila, o git tem funcionalidades muito úteis, um verdadeiro cavivete suiço para o desenvolvimento de software em rede. Estamos utilizando o &lt;a href="http://gonod.softwarelivre.org/bugzilla/" class="wiki external"&gt;sistema Bugzilla&lt;/a&gt; para gerenciar os bugs e funcionalidades pendentes.&lt;br&gt; &lt;br&gt; A página do projeto tem versão em Inglês: &lt;a href="http://wiki.softwarelivre.org/TV/SltvProject" class="wiki external"&gt;http://wiki.softwarelivre.org/TV/SltvProject&lt;/a&gt;&lt;br&gt; &lt;br&gt; Para gerenciar o projeto tenho utilizado o &lt;a href="http://openproj.org/openproj" class="wiki external"&gt;OpenProj&lt;/a&gt;, um programa livre para gerência de projetos que busca ser uma alternativa livre ao Microsoft Project. É um programa útil para acompanhar a evolução do projeto através de gráficos de Gantt, é estável mas tem seus bugs chatos também. Este programa está nos repositórios do Ubuntu 9.10.&lt;br&gt; Ainda não contribuí no código do projeto do jeito que esperava, mas tenho acompanhado os commits e penso em enviar um patch com uma funcionalidade interessante, já tenho ao menos uma em mente.&lt;br&gt; &lt;br&gt; O sltv hoje está na versão 0.5 que é a anterior da versão estável final do protótipo. Atualmente já é possível:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; capturar vídeo de webcams, câmeras DV firewire, captura da tela e arquivos de vídeo. &lt;/li&gt;
&lt;li&gt; capturar áudio da entrada de microfone da placa de som e de câmeras DV firewire. &lt;/li&gt;
&lt;li&gt; transmistir áudio e vídeo para servidores icecast. &lt;/li&gt;
&lt;li&gt; trocar (switch) a fonte do vídeo e do áudio durante a transmissão. &lt;/li&gt;
&lt;li&gt; aplicação de efeitos de áudio e vídeo durante a transmissão &lt;/li&gt;
&lt;li&gt; aplicação de leganda sobre o vídeo &lt;/li&gt;
&lt;li&gt; gerar saída para arquivo ogg theora/vorbis. &lt;/li&gt;
&lt;li&gt; salvar as configurações feitas. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt; Informações sobre o projeto e instruções de como utilizar o software podem ser acessadas aqui: &lt;a href="http://wiki.softwarelivre.org/TV/ProjetoSLTV" class="wiki external"&gt;http://wiki.softwarelivre.org/TV/ProjetoSLTV&lt;/a&gt;&lt;br&gt; &lt;br&gt; Na versão final do protótipo teremos suporte a múltiplas entradas e saídas, possibilitando a substituição dos scripts atuais da TV SL pelo sltv para transmissão de eventos reais. Aguardem o lançamento da versão final do protótipo python nos próximos dias.&lt;br&gt; &lt;br&gt; Esta primeira fase do projeto sltv é a reescrita do protótipo em python, nos próximos meses iremos evoluir esta ferramenta para sua utilização no &lt;a href="http://www.fisl.org.br/11/" class="wiki external"&gt;11º FISL&lt;/a&gt;.&lt;br&gt; &lt;br&gt; &lt;a name="Algumas_screenshots"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Algumas screenshots&lt;/h3&gt;
&lt;p&gt;&lt;span class="img"&gt;&lt;img src="http://wiki.softwarelivre.org/pub/TV/ProjetoSLTV/screenshot-v0.4.png" border="0" alt=""&gt;&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span class="img"&gt;&lt;img src="http://wiki.softwarelivre.org/pub/TV/ProjetoSLTV/screenshot2-v0.4.png" border="0" alt=""&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt; Por Lucasa.&lt;br&gt; &lt;br&gt;&lt;/p&gt;</description><pubDate>Tue, 09 Mar 2010 23:20:18 +0000</pubDate><link>http://softwarelivre.org/lucasa/hackeandoamusica/a-evolucao-da-ferramenta-de-transmissao-de-video-sltv</link><guid>http://softwarelivre.org/lucasa/hackeandoamusica/a-evolucao-da-ferramenta-de-transmissao-de-video-sltv</guid></item></channel></rss>