<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Caio S. de Britto Almeida's contents tagged with "noosfero"</title><link>http://softwarelivre.org/caiosba</link><description>Caio S. de Britto Almeida's contents tagged with "noosfero"</description><item><title>Noosfero Hacking Bar</title><description>&lt;p&gt;No última dia 9 de junho ocorreu em Salvador, no Villa do Bem, o Noosfero Hacking Bar. Desenvolvedores da comunidade &lt;a href="http://noosfero.org" target="_blank"&gt;Noosfero&lt;/a&gt; se reuniram para comer, beber, conversar... e programar, claro. &lt;/p&gt;
&lt;p&gt;O objetivo deste Hacking Bar era focar nos testes automatizados do Noosfero, mais especificamente nos testes de aceitação, que na arquitetura atual são baseados no &lt;a href="https://github.com/cucumber/cucumber" target="_blank"&gt;Cucumber&lt;/a&gt; com &lt;a href="http://seleniumhq.org/" target="_blank"&gt;Selenium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Teste de aceitação é uma fase do processo de teste em que um teste de caixa-preta é realizado num sistema antes de sua disponibilização. Tem por função verificar o sistema em relação aos seus requisitos originais, e às necessidades atuais do usuário.&lt;/p&gt;
&lt;p&gt;O Selenium é uma ferramenta que pode ser utilizada para testar aplicações web diretamente no navegador de forma automatizada, exatamente como o usuário faria. Já o Cucumber é uma ferramenta que pode executar documentação de funcionalidades escrita em texto puro. Com base nesta especificações, o Cucumber executa testes. Parece mágica, mas é apenas algumas convenções somadas à robustez do Ruby. Nos testes que precisam ser executados diretamente no navegador (por exemplo, naqueles que envolvem execução de código JavaScript), o Selenium é acionado.&lt;/p&gt;
&lt;p&gt;Devido a algumas instabilidades do Selenium e conflitos de versões, alguns destes testes estavam falhando no Noosfero. Muitas destas instabilidades são relacionadas ao Selenium RC, que é o servidor Selenium, escrito em Java.&lt;/p&gt;
&lt;p&gt;Tínhamos então duas opções para lidar com o Selenium: tentar realizar um upgrade para o Selenium 2, que nesta versão se juntou ao Webdriver, ou utilizar um outro framework, como o &lt;a href="https://github.com/jnicklas/capybara" target="_blank"&gt;Capybara&lt;/a&gt;. O Capybara auxilia no teste de aplicações Rails e Rack simulando como um usuário real interagiria com a aplicação, e já possui suporte nativo ao Selenium sem a necessidade de um servidor.&lt;/p&gt;
&lt;p&gt;Após horas de programação, frustrações e tentativas, concluímos que o caminho mais promissor é utilizar o Capybara. Conseguimos migrar um caso de teste para o Capybara e executá-lo com sucesso.&lt;/p&gt;
&lt;p&gt;O próximo passo é migrar os demais casos de teste para utilizar o Capybara. Quem sabe você não se junta a nós? :)&lt;/p&gt;</description><pubDate>Mon, 18 Jun 2012 18:47:36 +0000</pubDate><link>http://softwarelivre.org/caiosba/blog/noosfero-hacking-bar</link><guid>http://softwarelivre.org/caiosba/blog/noosfero-hacking-bar</guid></item></channel></rss>